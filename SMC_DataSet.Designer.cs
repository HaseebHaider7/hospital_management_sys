//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HospitalManagementSystem {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SMC_DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SMC_DataSet : global::System.Data.DataSet {
        
        private patientdetailsDataTable tablepatientdetails;
        
        private paymentdetailsDataTable tablepaymentdetails;
        
        private global::System.Data.DataRelation relationpatient_id;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SMC_DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected SMC_DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["patientdetails"] != null)) {
                    base.Tables.Add(new patientdetailsDataTable(ds.Tables["patientdetails"]));
                }
                if ((ds.Tables["paymentdetails"] != null)) {
                    base.Tables.Add(new paymentdetailsDataTable(ds.Tables["paymentdetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public patientdetailsDataTable patientdetails {
            get {
                return this.tablepatientdetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public paymentdetailsDataTable paymentdetails {
            get {
                return this.tablepaymentdetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SMC_DataSet cln = ((SMC_DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["patientdetails"] != null)) {
                    base.Tables.Add(new patientdetailsDataTable(ds.Tables["patientdetails"]));
                }
                if ((ds.Tables["paymentdetails"] != null)) {
                    base.Tables.Add(new paymentdetailsDataTable(ds.Tables["paymentdetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablepatientdetails = ((patientdetailsDataTable)(base.Tables["patientdetails"]));
            if ((initTable == true)) {
                if ((this.tablepatientdetails != null)) {
                    this.tablepatientdetails.InitVars();
                }
            }
            this.tablepaymentdetails = ((paymentdetailsDataTable)(base.Tables["paymentdetails"]));
            if ((initTable == true)) {
                if ((this.tablepaymentdetails != null)) {
                    this.tablepaymentdetails.InitVars();
                }
            }
            this.relationpatient_id = this.Relations["patient_id"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SMC_DataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SMC_DataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablepatientdetails = new patientdetailsDataTable();
            base.Tables.Add(this.tablepatientdetails);
            this.tablepaymentdetails = new paymentdetailsDataTable();
            base.Tables.Add(this.tablepaymentdetails);
            this.relationpatient_id = new global::System.Data.DataRelation("patient_id", new global::System.Data.DataColumn[] {
                        this.tablepatientdetails.patient_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablepaymentdetails.patientidColumn}, false);
            this.Relations.Add(this.relationpatient_id);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializepatientdetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializepaymentdetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SMC_DataSet ds = new SMC_DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void patientdetailsRowChangeEventHandler(object sender, patientdetailsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void paymentdetailsRowChangeEventHandler(object sender, paymentdetailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class patientdetailsDataTable : global::System.Data.TypedTableBase<patientdetailsRow> {
            
            private global::System.Data.DataColumn columnpatient_id;
            
            private global::System.Data.DataColumn columnpatient_name;
            
            private global::System.Data.DataColumn columndate_of_birth;
            
            private global::System.Data.DataColumn columngender;
            
            private global::System.Data.DataColumn columnage;
            
            private global::System.Data.DataColumn columnfather_name;
            
            private global::System.Data.DataColumn columncnic;
            
            private global::System.Data.DataColumn columnpatient_address;
            
            private global::System.Data.DataColumn columnadmission_date;
            
            private global::System.Data.DataColumn columnpatient_status;
            
            private global::System.Data.DataColumn columndischarging_date;
            
            private global::System.Data.DataColumn columndoctor_id;
            
            private global::System.Data.DataColumn columnassigned_doctor;
            
            private global::System.Data.DataColumn columndoctor_fee_charged;
            
            private global::System.Data.DataColumn columnoperationfee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public patientdetailsDataTable() {
                this.TableName = "patientdetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal patientdetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected patientdetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn patient_idColumn {
                get {
                    return this.columnpatient_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn patient_nameColumn {
                get {
                    return this.columnpatient_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn date_of_birthColumn {
                get {
                    return this.columndate_of_birth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ageColumn {
                get {
                    return this.columnage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn father_nameColumn {
                get {
                    return this.columnfather_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn cnicColumn {
                get {
                    return this.columncnic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn patient_addressColumn {
                get {
                    return this.columnpatient_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn admission_dateColumn {
                get {
                    return this.columnadmission_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn patient_statusColumn {
                get {
                    return this.columnpatient_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn discharging_dateColumn {
                get {
                    return this.columndischarging_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn doctor_idColumn {
                get {
                    return this.columndoctor_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn assigned_doctorColumn {
                get {
                    return this.columnassigned_doctor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn doctor_fee_chargedColumn {
                get {
                    return this.columndoctor_fee_charged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn operationfeeColumn {
                get {
                    return this.columnoperationfee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public patientdetailsRow this[int index] {
                get {
                    return ((patientdetailsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event patientdetailsRowChangeEventHandler patientdetailsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event patientdetailsRowChangeEventHandler patientdetailsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event patientdetailsRowChangeEventHandler patientdetailsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event patientdetailsRowChangeEventHandler patientdetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddpatientdetailsRow(patientdetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public patientdetailsRow AddpatientdetailsRow(string patient_id, string patient_name, string date_of_birth, string gender, string age, string father_name, string cnic, string patient_address, string admission_date, string patient_status, string discharging_date, string doctor_id, string assigned_doctor, string doctor_fee_charged, double operationfee) {
                patientdetailsRow rowpatientdetailsRow = ((patientdetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        patient_id,
                        patient_name,
                        date_of_birth,
                        gender,
                        age,
                        father_name,
                        cnic,
                        patient_address,
                        admission_date,
                        patient_status,
                        discharging_date,
                        doctor_id,
                        assigned_doctor,
                        doctor_fee_charged,
                        operationfee};
                rowpatientdetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpatientdetailsRow);
                return rowpatientdetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public patientdetailsRow FindBypatient_id(string patient_id) {
                return ((patientdetailsRow)(this.Rows.Find(new object[] {
                            patient_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                patientdetailsDataTable cln = ((patientdetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new patientdetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnpatient_id = base.Columns["patient_id"];
                this.columnpatient_name = base.Columns["patient_name"];
                this.columndate_of_birth = base.Columns["date_of_birth"];
                this.columngender = base.Columns["gender"];
                this.columnage = base.Columns["age"];
                this.columnfather_name = base.Columns["father_name"];
                this.columncnic = base.Columns["cnic"];
                this.columnpatient_address = base.Columns["patient_address"];
                this.columnadmission_date = base.Columns["admission_date"];
                this.columnpatient_status = base.Columns["patient_status"];
                this.columndischarging_date = base.Columns["discharging_date"];
                this.columndoctor_id = base.Columns["doctor_id"];
                this.columnassigned_doctor = base.Columns["assigned_doctor"];
                this.columndoctor_fee_charged = base.Columns["doctor_fee_charged"];
                this.columnoperationfee = base.Columns["operationfee"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnpatient_id = new global::System.Data.DataColumn("patient_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatient_id);
                this.columnpatient_name = new global::System.Data.DataColumn("patient_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatient_name);
                this.columndate_of_birth = new global::System.Data.DataColumn("date_of_birth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_of_birth);
                this.columngender = new global::System.Data.DataColumn("gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnage = new global::System.Data.DataColumn("age", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnage);
                this.columnfather_name = new global::System.Data.DataColumn("father_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfather_name);
                this.columncnic = new global::System.Data.DataColumn("cnic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncnic);
                this.columnpatient_address = new global::System.Data.DataColumn("patient_address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatient_address);
                this.columnadmission_date = new global::System.Data.DataColumn("admission_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadmission_date);
                this.columnpatient_status = new global::System.Data.DataColumn("patient_status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatient_status);
                this.columndischarging_date = new global::System.Data.DataColumn("discharging_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndischarging_date);
                this.columndoctor_id = new global::System.Data.DataColumn("doctor_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctor_id);
                this.columnassigned_doctor = new global::System.Data.DataColumn("assigned_doctor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassigned_doctor);
                this.columndoctor_fee_charged = new global::System.Data.DataColumn("doctor_fee_charged", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctor_fee_charged);
                this.columnoperationfee = new global::System.Data.DataColumn("operationfee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoperationfee);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnpatient_id}, true));
                this.columnpatient_id.AllowDBNull = false;
                this.columnpatient_id.Unique = true;
                this.columnpatient_id.MaxLength = 80;
                this.columnpatient_name.AllowDBNull = false;
                this.columnpatient_name.MaxLength = 255;
                this.columndate_of_birth.AllowDBNull = false;
                this.columndate_of_birth.MaxLength = 255;
                this.columngender.AllowDBNull = false;
                this.columngender.MaxLength = 50;
                this.columnage.AllowDBNull = false;
                this.columnage.MaxLength = 50;
                this.columnfather_name.AllowDBNull = false;
                this.columnfather_name.MaxLength = 255;
                this.columncnic.AllowDBNull = false;
                this.columncnic.MaxLength = 16;
                this.columnpatient_address.AllowDBNull = false;
                this.columnpatient_address.MaxLength = 255;
                this.columnadmission_date.AllowDBNull = false;
                this.columnadmission_date.MaxLength = 255;
                this.columnpatient_status.AllowDBNull = false;
                this.columnpatient_status.MaxLength = 45;
                this.columndischarging_date.MaxLength = 255;
                this.columndoctor_id.AllowDBNull = false;
                this.columndoctor_id.MaxLength = 45;
                this.columnassigned_doctor.AllowDBNull = false;
                this.columnassigned_doctor.MaxLength = 255;
                this.columndoctor_fee_charged.AllowDBNull = false;
                this.columndoctor_fee_charged.MaxLength = 45;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public patientdetailsRow NewpatientdetailsRow() {
                return ((patientdetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new patientdetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(patientdetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.patientdetailsRowChanged != null)) {
                    this.patientdetailsRowChanged(this, new patientdetailsRowChangeEvent(((patientdetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.patientdetailsRowChanging != null)) {
                    this.patientdetailsRowChanging(this, new patientdetailsRowChangeEvent(((patientdetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.patientdetailsRowDeleted != null)) {
                    this.patientdetailsRowDeleted(this, new patientdetailsRowChangeEvent(((patientdetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.patientdetailsRowDeleting != null)) {
                    this.patientdetailsRowDeleting(this, new patientdetailsRowChangeEvent(((patientdetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovepatientdetailsRow(patientdetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SMC_DataSet ds = new SMC_DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "patientdetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class paymentdetailsDataTable : global::System.Data.TypedTableBase<paymentdetailsRow> {
            
            private global::System.Data.DataColumn columnpayment_id;
            
            private global::System.Data.DataColumn columnpatientid;
            
            private global::System.Data.DataColumn columndoctorid;
            
            private global::System.Data.DataColumn columndoctor_fee;
            
            private global::System.Data.DataColumn columnoperation_fee;
            
            private global::System.Data.DataColumn columnward_fee;
            
            private global::System.Data.DataColumn columnincubator_fee;
            
            private global::System.Data.DataColumn columnoxygen_fee;
            
            private global::System.Data.DataColumn columnphototherapy_fee;
            
            private global::System.Data.DataColumn columndeposite;
            
            private global::System.Data.DataColumn columntotal_fee;
            
            private global::System.Data.DataColumn columnbalance;
            
            private global::System.Data.DataColumn columnpayment_month;
            
            private global::System.Data.DataColumn columnpayment_year;
            
            private global::System.Data.DataColumn columnpayment_date;
            
            private global::System.Data.DataColumn columnother_fee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public paymentdetailsDataTable() {
                this.TableName = "paymentdetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal paymentdetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected paymentdetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn payment_idColumn {
                get {
                    return this.columnpayment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn patientidColumn {
                get {
                    return this.columnpatientid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn doctoridColumn {
                get {
                    return this.columndoctorid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn doctor_feeColumn {
                get {
                    return this.columndoctor_fee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn operation_feeColumn {
                get {
                    return this.columnoperation_fee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ward_feeColumn {
                get {
                    return this.columnward_fee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn incubator_feeColumn {
                get {
                    return this.columnincubator_fee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn oxygen_feeColumn {
                get {
                    return this.columnoxygen_fee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn phototherapy_feeColumn {
                get {
                    return this.columnphototherapy_fee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn depositeColumn {
                get {
                    return this.columndeposite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn total_feeColumn {
                get {
                    return this.columntotal_fee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn balanceColumn {
                get {
                    return this.columnbalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn payment_monthColumn {
                get {
                    return this.columnpayment_month;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn payment_yearColumn {
                get {
                    return this.columnpayment_year;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn payment_dateColumn {
                get {
                    return this.columnpayment_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn other_feeColumn {
                get {
                    return this.columnother_fee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public paymentdetailsRow this[int index] {
                get {
                    return ((paymentdetailsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event paymentdetailsRowChangeEventHandler paymentdetailsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event paymentdetailsRowChangeEventHandler paymentdetailsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event paymentdetailsRowChangeEventHandler paymentdetailsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event paymentdetailsRowChangeEventHandler paymentdetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddpaymentdetailsRow(paymentdetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public paymentdetailsRow AddpaymentdetailsRow(
                        string payment_id, 
                        patientdetailsRow parentpatientdetailsRowBypatient_id, 
                        string doctorid, 
                        double doctor_fee, 
                        double operation_fee, 
                        double ward_fee, 
                        double incubator_fee, 
                        double oxygen_fee, 
                        double phototherapy_fee, 
                        double deposite, 
                        double total_fee, 
                        double balance, 
                        string payment_month, 
                        string payment_year, 
                        string payment_date, 
                        string other_fee) {
                paymentdetailsRow rowpaymentdetailsRow = ((paymentdetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        payment_id,
                        null,
                        doctorid,
                        doctor_fee,
                        operation_fee,
                        ward_fee,
                        incubator_fee,
                        oxygen_fee,
                        phototherapy_fee,
                        deposite,
                        total_fee,
                        balance,
                        payment_month,
                        payment_year,
                        payment_date,
                        other_fee};
                if ((parentpatientdetailsRowBypatient_id != null)) {
                    columnValuesArray[1] = parentpatientdetailsRowBypatient_id[0];
                }
                rowpaymentdetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpaymentdetailsRow);
                return rowpaymentdetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public paymentdetailsRow FindBypayment_idpatientid(string payment_id, string patientid) {
                return ((paymentdetailsRow)(this.Rows.Find(new object[] {
                            payment_id,
                            patientid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                paymentdetailsDataTable cln = ((paymentdetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new paymentdetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnpayment_id = base.Columns["payment_id"];
                this.columnpatientid = base.Columns["patientid"];
                this.columndoctorid = base.Columns["doctorid"];
                this.columndoctor_fee = base.Columns["doctor_fee"];
                this.columnoperation_fee = base.Columns["operation_fee"];
                this.columnward_fee = base.Columns["ward_fee"];
                this.columnincubator_fee = base.Columns["incubator_fee"];
                this.columnoxygen_fee = base.Columns["oxygen_fee"];
                this.columnphototherapy_fee = base.Columns["phototherapy_fee"];
                this.columndeposite = base.Columns["deposite"];
                this.columntotal_fee = base.Columns["total_fee"];
                this.columnbalance = base.Columns["balance"];
                this.columnpayment_month = base.Columns["payment_month"];
                this.columnpayment_year = base.Columns["payment_year"];
                this.columnpayment_date = base.Columns["payment_date"];
                this.columnother_fee = base.Columns["other_fee"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnpayment_id = new global::System.Data.DataColumn("payment_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayment_id);
                this.columnpatientid = new global::System.Data.DataColumn("patientid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatientid);
                this.columndoctorid = new global::System.Data.DataColumn("doctorid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctorid);
                this.columndoctor_fee = new global::System.Data.DataColumn("doctor_fee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctor_fee);
                this.columnoperation_fee = new global::System.Data.DataColumn("operation_fee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoperation_fee);
                this.columnward_fee = new global::System.Data.DataColumn("ward_fee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnward_fee);
                this.columnincubator_fee = new global::System.Data.DataColumn("incubator_fee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnincubator_fee);
                this.columnoxygen_fee = new global::System.Data.DataColumn("oxygen_fee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoxygen_fee);
                this.columnphototherapy_fee = new global::System.Data.DataColumn("phototherapy_fee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphototherapy_fee);
                this.columndeposite = new global::System.Data.DataColumn("deposite", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeposite);
                this.columntotal_fee = new global::System.Data.DataColumn("total_fee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_fee);
                this.columnbalance = new global::System.Data.DataColumn("balance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbalance);
                this.columnpayment_month = new global::System.Data.DataColumn("payment_month", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayment_month);
                this.columnpayment_year = new global::System.Data.DataColumn("payment_year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayment_year);
                this.columnpayment_date = new global::System.Data.DataColumn("payment_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayment_date);
                this.columnother_fee = new global::System.Data.DataColumn("other_fee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnother_fee);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnpayment_id,
                                this.columnpatientid}, true));
                this.columnpayment_id.AllowDBNull = false;
                this.columnpayment_id.MaxLength = 45;
                this.columnpatientid.AllowDBNull = false;
                this.columnpatientid.MaxLength = 45;
                this.columndoctorid.AllowDBNull = false;
                this.columndoctorid.MaxLength = 45;
                this.columndoctor_fee.AllowDBNull = false;
                this.columnoperation_fee.AllowDBNull = false;
                this.columnward_fee.AllowDBNull = false;
                this.columnincubator_fee.AllowDBNull = false;
                this.columnoxygen_fee.AllowDBNull = false;
                this.columnphototherapy_fee.AllowDBNull = false;
                this.columndeposite.AllowDBNull = false;
                this.columntotal_fee.AllowDBNull = false;
                this.columnbalance.AllowDBNull = false;
                this.columnpayment_month.AllowDBNull = false;
                this.columnpayment_month.MaxLength = 50;
                this.columnpayment_year.AllowDBNull = false;
                this.columnpayment_year.MaxLength = 45;
                this.columnpayment_date.AllowDBNull = false;
                this.columnpayment_date.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public paymentdetailsRow NewpaymentdetailsRow() {
                return ((paymentdetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new paymentdetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(paymentdetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.paymentdetailsRowChanged != null)) {
                    this.paymentdetailsRowChanged(this, new paymentdetailsRowChangeEvent(((paymentdetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.paymentdetailsRowChanging != null)) {
                    this.paymentdetailsRowChanging(this, new paymentdetailsRowChangeEvent(((paymentdetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.paymentdetailsRowDeleted != null)) {
                    this.paymentdetailsRowDeleted(this, new paymentdetailsRowChangeEvent(((paymentdetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.paymentdetailsRowDeleting != null)) {
                    this.paymentdetailsRowDeleting(this, new paymentdetailsRowChangeEvent(((paymentdetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovepaymentdetailsRow(paymentdetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SMC_DataSet ds = new SMC_DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "paymentdetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class patientdetailsRow : global::System.Data.DataRow {
            
            private patientdetailsDataTable tablepatientdetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal patientdetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepatientdetails = ((patientdetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string patient_id {
                get {
                    return ((string)(this[this.tablepatientdetails.patient_idColumn]));
                }
                set {
                    this[this.tablepatientdetails.patient_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string patient_name {
                get {
                    return ((string)(this[this.tablepatientdetails.patient_nameColumn]));
                }
                set {
                    this[this.tablepatientdetails.patient_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string date_of_birth {
                get {
                    return ((string)(this[this.tablepatientdetails.date_of_birthColumn]));
                }
                set {
                    this[this.tablepatientdetails.date_of_birthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string gender {
                get {
                    return ((string)(this[this.tablepatientdetails.genderColumn]));
                }
                set {
                    this[this.tablepatientdetails.genderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string age {
                get {
                    return ((string)(this[this.tablepatientdetails.ageColumn]));
                }
                set {
                    this[this.tablepatientdetails.ageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string father_name {
                get {
                    return ((string)(this[this.tablepatientdetails.father_nameColumn]));
                }
                set {
                    this[this.tablepatientdetails.father_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string cnic {
                get {
                    return ((string)(this[this.tablepatientdetails.cnicColumn]));
                }
                set {
                    this[this.tablepatientdetails.cnicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string patient_address {
                get {
                    return ((string)(this[this.tablepatientdetails.patient_addressColumn]));
                }
                set {
                    this[this.tablepatientdetails.patient_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string admission_date {
                get {
                    return ((string)(this[this.tablepatientdetails.admission_dateColumn]));
                }
                set {
                    this[this.tablepatientdetails.admission_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string patient_status {
                get {
                    return ((string)(this[this.tablepatientdetails.patient_statusColumn]));
                }
                set {
                    this[this.tablepatientdetails.patient_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string discharging_date {
                get {
                    try {
                        return ((string)(this[this.tablepatientdetails.discharging_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'discharging_date\' in table \'patientdetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepatientdetails.discharging_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string doctor_id {
                get {
                    return ((string)(this[this.tablepatientdetails.doctor_idColumn]));
                }
                set {
                    this[this.tablepatientdetails.doctor_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string assigned_doctor {
                get {
                    return ((string)(this[this.tablepatientdetails.assigned_doctorColumn]));
                }
                set {
                    this[this.tablepatientdetails.assigned_doctorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string doctor_fee_charged {
                get {
                    return ((string)(this[this.tablepatientdetails.doctor_fee_chargedColumn]));
                }
                set {
                    this[this.tablepatientdetails.doctor_fee_chargedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double operationfee {
                get {
                    try {
                        return ((double)(this[this.tablepatientdetails.operationfeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'operationfee\' in table \'patientdetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepatientdetails.operationfeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isdischarging_dateNull() {
                return this.IsNull(this.tablepatientdetails.discharging_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setdischarging_dateNull() {
                this[this.tablepatientdetails.discharging_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsoperationfeeNull() {
                return this.IsNull(this.tablepatientdetails.operationfeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetoperationfeeNull() {
                this[this.tablepatientdetails.operationfeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public paymentdetailsRow[] GetpaymentdetailsRows() {
                if ((this.Table.ChildRelations["patient_id"] == null)) {
                    return new paymentdetailsRow[0];
                }
                else {
                    return ((paymentdetailsRow[])(base.GetChildRows(this.Table.ChildRelations["patient_id"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class paymentdetailsRow : global::System.Data.DataRow {
            
            private paymentdetailsDataTable tablepaymentdetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal paymentdetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepaymentdetails = ((paymentdetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string payment_id {
                get {
                    return ((string)(this[this.tablepaymentdetails.payment_idColumn]));
                }
                set {
                    this[this.tablepaymentdetails.payment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string patientid {
                get {
                    return ((string)(this[this.tablepaymentdetails.patientidColumn]));
                }
                set {
                    this[this.tablepaymentdetails.patientidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string doctorid {
                get {
                    return ((string)(this[this.tablepaymentdetails.doctoridColumn]));
                }
                set {
                    this[this.tablepaymentdetails.doctoridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double doctor_fee {
                get {
                    return ((double)(this[this.tablepaymentdetails.doctor_feeColumn]));
                }
                set {
                    this[this.tablepaymentdetails.doctor_feeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double operation_fee {
                get {
                    return ((double)(this[this.tablepaymentdetails.operation_feeColumn]));
                }
                set {
                    this[this.tablepaymentdetails.operation_feeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double ward_fee {
                get {
                    return ((double)(this[this.tablepaymentdetails.ward_feeColumn]));
                }
                set {
                    this[this.tablepaymentdetails.ward_feeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double incubator_fee {
                get {
                    return ((double)(this[this.tablepaymentdetails.incubator_feeColumn]));
                }
                set {
                    this[this.tablepaymentdetails.incubator_feeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double oxygen_fee {
                get {
                    return ((double)(this[this.tablepaymentdetails.oxygen_feeColumn]));
                }
                set {
                    this[this.tablepaymentdetails.oxygen_feeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double phototherapy_fee {
                get {
                    return ((double)(this[this.tablepaymentdetails.phototherapy_feeColumn]));
                }
                set {
                    this[this.tablepaymentdetails.phototherapy_feeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double deposite {
                get {
                    return ((double)(this[this.tablepaymentdetails.depositeColumn]));
                }
                set {
                    this[this.tablepaymentdetails.depositeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double total_fee {
                get {
                    return ((double)(this[this.tablepaymentdetails.total_feeColumn]));
                }
                set {
                    this[this.tablepaymentdetails.total_feeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double balance {
                get {
                    return ((double)(this[this.tablepaymentdetails.balanceColumn]));
                }
                set {
                    this[this.tablepaymentdetails.balanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string payment_month {
                get {
                    return ((string)(this[this.tablepaymentdetails.payment_monthColumn]));
                }
                set {
                    this[this.tablepaymentdetails.payment_monthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string payment_year {
                get {
                    return ((string)(this[this.tablepaymentdetails.payment_yearColumn]));
                }
                set {
                    this[this.tablepaymentdetails.payment_yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string payment_date {
                get {
                    return ((string)(this[this.tablepaymentdetails.payment_dateColumn]));
                }
                set {
                    this[this.tablepaymentdetails.payment_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string other_fee {
                get {
                    try {
                        return ((string)(this[this.tablepaymentdetails.other_feeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'other_fee\' in table \'paymentdetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepaymentdetails.other_feeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public patientdetailsRow patientdetailsRow {
                get {
                    return ((patientdetailsRow)(this.GetParentRow(this.Table.ParentRelations["patient_id"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["patient_id"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isother_feeNull() {
                return this.IsNull(this.tablepaymentdetails.other_feeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setother_feeNull() {
                this[this.tablepaymentdetails.other_feeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class patientdetailsRowChangeEvent : global::System.EventArgs {
            
            private patientdetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public patientdetailsRowChangeEvent(patientdetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public patientdetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class paymentdetailsRowChangeEvent : global::System.EventArgs {
            
            private paymentdetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public paymentdetailsRowChangeEvent(paymentdetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public paymentdetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591